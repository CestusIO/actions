name: golang-ci-build_pr
on:
  # pull_request:
  #   branches: [main]
  workflow_call:
    inputs:
      go-version:
        description: the go version
        required: false
        type: string
        default: "~1.24.0"
      actions-ref:
        description: the ref actions will be checkout at
        type: string
        required: false
        default: "main"
    secrets:
      token:
        required: true
        description: secret used to check out repository. If actions in this workflow should trigger other actions provice as PAT otherwise the github_token will suffice

jobs:
  get-commit-title:
    runs-on: ubuntu-latest
    outputs:
      text: ${{ steps.get_head_commit_title.outputs.title }}
    steps:
      - name: "☁️checkout repository"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: "☁️ checkout action repository"
        uses: actions/checkout@v4
        with:
          repository: CestusIO/actions
          ref: ${{inputs.actions-ref}}
          path: .github/actions
          token: ${{secrets.token}}
      - id: get_head_commit_title
        run: echo "title=\"$(git log --format=%B -n 1 HEAD | head -n 1)\"" >> "$GITHUB_OUTPUT"

  build-go:
    name: 🏗 build-go
    runs-on: ubuntu-latest
    steps:
      - name: "☁️checkout repository"
        uses: actions/checkout@v4
      - name: "☁️ checkout action repository"
        uses: actions/checkout@v4
        with:
          repository: CestusIO/actions
          ref: ${{inputs.actions-ref}}
          path: .github/actions
          token: ${{secrets.token}}
      - name: 🔑 Granting private modules access
        run: |
          git config --global url."https://${{ secrets.token }}:x-oauth-basic@github.com/CestusIO".insteadOf "https://github.com/CestusIO"
      - name: Install tools
        uses: ./.github/actions/install-tools
        with:
          token: ${{secrets.token}}
      - name: "🔧 setup go"
        uses: ./.github/actions/setup-go
        id: setup_go
        with:
          go-version: ${{inputs.go-version}}
      - name: "🏗 Build"
        run: |
          make build_all
  test-go:
    name: 🧪 test-go
    runs-on: ubuntu-latest
    steps:
      - name: "☁️ checkout repository"
        uses: actions/checkout@v4
      - name: "☁️ checkout action repository"
        uses: actions/checkout@v4
        with:
          repository: CestusIO/actions
          ref: ${{inputs.actions-ref}}
          path: .github/actions
          token: ${{secrets.token}}
      - name: 🔑 Granting private modules access
        run: |
          git config --global url."https://${{ secrets.token }}:x-oauth-basic@github.com/CestusIO".insteadOf "https://github.com/CestusIO"
      - name: Install tools
        uses: ./.github/actions/install-tools
        with:
          token: ${{secrets.token}}
      - name: "🔧 setup go"
        uses: ./.github/actions/setup-go
        id: setup_go
        with:
          go-version: ${{inputs.go-version}}
      - name: Install Protoc
        uses: arduino/setup-protoc@v3.0.0
        with:
          version: "29.1"
          repo-token: ${{secrets.token}}
      - name: "🧪 Test"
        run: |
          make test
  codegen-go:
    name: 🔌 codegen
    runs-on: ubuntu-latest
    steps:
      - name: "☁️ checkout repository"
        uses: actions/checkout@v4
      - name: "☁️ checkout action repository"
        uses: actions/checkout@v4
        with:
          repository: CestusIO/actions
          ref: ${{inputs.actions-ref}}
          path: .github/actions
          token: ${{secrets.token}}
      - name: 🔑 Granting private modules access
        run: |
          git config --global url."https://${{ secrets.token }}:x-oauth-basic@github.com/CestusIO".insteadOf "https://github.com/CestusIO"
      - name: Install tools
        uses: ./.github/actions/install-tools
        with:
          token: ${{secrets.token}}
      - name: "🔧 setup go"
        uses: ./.github/actions/setup-go
        id: setup_go
        with:
          go-version: ${{inputs.go-version}}
      - name: Install Protoc
        uses: arduino/setup-protoc@v3.0.0
        with:
          version: "29.1"
          repo-token: ${{secrets.token}}
      - name: "🔌 generate"
        run: |
          make install_tools
          make generate
          git diff --exit-code -- .
      - name: "🧪 check tidyness of go.mod and go.sum"
        run: |
          go mod tidy
          git diff --exit-code -- .
  prerelease-version:
    runs-on: ubuntu-latest
    needs: [get-commit-title, build-go, test-go, codegen-go]
    steps:
      - name: Echo commit message
        run: echo ${{ needs.get-commit-title.outputs.text }}
      - name: "☁️ checkout repository"
        if: "contains(needs.get-commit-title.outputs.text, '[releasecandidate]')"
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.token }}
      - name: "☁️ checkout action repository"
        if: "contains(needs.get-commit-title.outputs.text, '[releasecandidate]')"
        uses: actions/checkout@v4
        with:
          repository: CestusIO/actions
          ref: ${{inputs.actions-ref}}
          path: .github/actions
          token: ${{secrets.token}}
      - name: 🔑 Granting private modules access
        if: "contains(needs.get-commit-title.outputs.text, '[releasecandidate]')"
        run: |
          git config --global url."https://${{ secrets.token }}:x-oauth-basic@github.com/CestusIO".insteadOf "https://github.com/CestusIO"
      - name: Install tools
        if: "contains(needs.get-commit-title.outputs.text, '[releasecandidate]')"
        uses: ./.github/actions/install-tools
        with:
          token: ${{secrets.token}}
      - name: "🔧 setup go"
        if: "contains(needs.get-commit-title.outputs.text, '[releasecandidate]')"
        uses: ./.github/actions/setup-go
        id: setup_go
        with:
          go-version: ${{inputs.go-version}}
          go-tooling-only: "true"

      - name: "🙀 Release Candidate"
        if: "contains(needs.get-commit-title.outputs.text, '[releasecandidate]')"
        uses: CestusIO/actions/create-tag@main
        id: create_tag
        with:
          tag: ${{ steps.setup_go.outputs.svermaker-go-build-version }}
